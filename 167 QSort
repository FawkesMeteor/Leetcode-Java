//Problem 167
//two-sum-ii-input-array-is-sorted

// Using QSort by FawkesMeteor
#Runtime: 0 ms
#Memory Usage: 49.7 MB



class Solution {
    public int[] twoSum(int[] numbers, int target) {

        int i=0,j=0,end = numbers.length;
        
        if (numbers[0]+numbers[1]==target)
            return new int[] {1,2};
        end -= 1;
        
        if (end>3)
        {
            while (numbers[(end+1)/2]>target)
            {
                end = (end+1)/2;
            }
            while (numbers[3*(end+1)/4]>target)
            {
                end = 3*(end+1)/4;
            }
        }
        
        
        for (;end>0;)
        {
                
            if (numbers[end]<=target)
            {
                if ((target-numbers[end])>=numbers[0])
                    for (j=end;j>i;)
                    {
                        if (j==i+1 &&numbers[i]+numbers[end]!=target)
                            j=i;
                        if (numbers[(j+i)/2]>(target-numbers[end]))
                            j = (j+i)/2;
                        else if (numbers[(j+i)/2]<(target-numbers[end]))
                            i = (j+i)/2;
                        else
                            return new int[] {((j+i)/2)+1,end+1};
                        
                    }
            }
            end--;
        }
        return null;
    }
}
