//Problem 02
//add-two-numbers

// Using ListNode by FawkesMeteor
//Runtime: 3 ms
//Memory Usage: 47.2 MB


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int sum=0,plus=0;
        sum = l1.val+l2.val;
        
        ListNode result = new ListNode(sum%10);
        ListNode pointer = result;
        
        if (sum>=10)
            plus=1;
        
        l1 = l1.next;
        l2 = l2.next;
        
        while (l1!=null || l2!=null)
        {
            if (l1 == null && l2 !=null)
            {
                sum = l2.val+plus;
            }else
            if (l1 != null && l2 ==null)
            {
                sum = l1.val+plus;
            }else
            {
                sum = l1.val+l2.val+plus;
            }
            
            plus=0;
                
            pointer.next = new ListNode(sum%10);                
            if (sum>=10)
                plus=1;
            
            if (l1!=null)
                l1 = l1.next;
            if (l2!=null)
                l2 = l2.next;
            pointer= pointer.next;
        }
        if (plus==1)
            pointer.next = new ListNode(plus);
        return result;
    }
}
